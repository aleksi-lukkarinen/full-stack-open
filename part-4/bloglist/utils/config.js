require("dotenv").config()

const USERNAME_MIN_LENGTH = 3
const PASSWORD_MIN_LENGTH = 3
const SALT_ROUNDS = 10

const ENVIRONMENT_CLASS = process.env.NODE_ENV
const IS_TEST_ENVIRONMENT = ENVIRONMENT_CLASS === "test"

const PORT_TO_LISTEN = process.env.PORT

const MONGO_USER_NAME = IS_TEST_ENVIRONMENT
  ? process.env.TEST_MONGO_USER_NAME
  : process.env.MONGO_USER_NAME

const MONGO_PASSWORD = IS_TEST_ENVIRONMENT
  ? process.env.TEST_MONGO_PASSWORD
  : process.env.MONGO_PASSWORD

const MONGO_CLUSTER_NAME = IS_TEST_ENVIRONMENT
  ? process.env.TEST_MONGO_CLUSTER_NAME
  : process.env.MONGO_CLUSTER_NAME

const MONGO_DATABASE_NAME = IS_TEST_ENVIRONMENT
  ? process.env.TEST_MONGO_DATABASE_NAME
  : process.env.MONGO_DATABASE_NAME

const URL_BASE = "/"
const URL_API_ROOT = URL_BASE + "api/"
const URL_API_BLOGS = URL_API_ROOT + "blogs"
const URL_API_USERS = URL_API_ROOT + "users"

const EXIT_CODE_FAILURE = 1

const HTTP_STATUS_OK = 200
const HTTP_STATUS_CREATED = 201
const HTTP_STATUS_NO_CONTENT = 204
const HTTP_STATUS_BAD_REQUEST = 400
const HTTP_STATUS_NOT_FOUND = 404
const HTTP_STATUS_INTERNAL_SERVER_ERROR = 500

const ERR_FIRST = 0
const ERR_UNKNOWN_ENDPOINT = ERR_FIRST + 0
const ERR_MALFORMATTED_ID = ERR_FIRST + 1
const ERR_USER_WITH_USERNAME_EXISTS = ERR_FIRST + 2
const ERR_USER_WITH_USERNAME_DOES_NOT_EXIST = ERR_FIRST + 3
const ERR_USERNAME_TOO_SHORT = ERR_FIRST + 4
const ERR_USERNAME_IS_NOT_STRING = ERR_FIRST + 5
const ERR_PASSWORD_TOO_SHORT = ERR_FIRST + 6
const ERR_PASSWORD_IS_NOT_STRING = ERR_FIRST + 7
const ERR_BLOG_LIST_IS_NOT_ARRAY = ERR_FIRST + 8

const ErrorMessages = {}
ErrorMessages[ERR_UNKNOWN_ENDPOINT] =
    "Unknown endpoint"
ErrorMessages[ERR_MALFORMATTED_ID] =
    "Malformatted ID value"
ErrorMessages[ERR_USER_WITH_USERNAME_EXISTS] =
    "A user with the given username already exists"
ErrorMessages[ERR_USER_WITH_USERNAME_DOES_NOT_EXIST] =
    "A user with the given username cannot be found"
ErrorMessages[ERR_USERNAME_TOO_SHORT] =
    `A username has to be at least ${USERNAME_MIN_LENGTH} characters long`
ErrorMessages[ERR_USERNAME_IS_NOT_STRING] =
    "Username has to be a string"
ErrorMessages[ERR_PASSWORD_TOO_SHORT] =
    `A password has to be at least ${PASSWORD_MIN_LENGTH} characters long`
ErrorMessages[ERR_PASSWORD_IS_NOT_STRING] =
    "Password has to be a string"
ErrorMessages[ERR_BLOG_LIST_IS_NOT_ARRAY] =
    "Blog list has to be an array"

module.exports = {
  USERNAME_MIN_LENGTH,
  PASSWORD_MIN_LENGTH,
  SALT_ROUNDS,

  ENVIRONMENT_CLASS,
  IS_TEST_ENVIRONMENT,

  PORT_TO_LISTEN,

  MONGO_USER_NAME,
  MONGO_PASSWORD,
  MONGO_CLUSTER_NAME,
  MONGO_DATABASE_NAME,

  URL_BASE,
  URL_API_ROOT,
  URL_API_BLOGS,
  URL_API_USERS,

  EXIT_CODE_FAILURE,

  HTTP_STATUS_OK,
  HTTP_STATUS_CREATED,
  HTTP_STATUS_NO_CONTENT,
  HTTP_STATUS_BAD_REQUEST,
  HTTP_STATUS_NOT_FOUND,
  HTTP_STATUS_INTERNAL_SERVER_ERROR,

  ERR_UNKNOWN_ENDPOINT,
  ERR_MALFORMATTED_ID,
  ERR_USER_WITH_USERNAME_EXISTS,
  ERR_USER_WITH_USERNAME_DOES_NOT_EXIST,
  ERR_USERNAME_TOO_SHORT,
  ERR_USERNAME_IS_NOT_STRING,
  ERR_PASSWORD_TOO_SHORT,
  ERR_PASSWORD_IS_NOT_STRING,
  ERR_BLOG_LIST_IS_NOT_ARRAY,
  ErrorMessages,
}
